message(paste0('prepping inputs for site ', site_name, ' ', ur))
# expand scenario out to 2050
site <- set_vaccine_coverage(
site,
change = FALSE,
terminal_year = 2050,
rtss_target = 0.8,
rtss_year = 2023
)
# pull parameters for this site
params<- site::site_parameters(
interventions = site$interventions,
demography = site$demography,
vectors = site$vectors,
seasonality = site$seasonality,
eir= site$eir$eir[1],
overrides = list(human_population= 100)
)
year<- 365
# Set clinical incidence rendering
params$clinical_incidence_rendering_min_ages = min_ages
params$clinical_incidence_rendering_max_ages = max_ages
# Set severe incidence rendering
params$severe_incidence_rendering_min_ages = min_ages
params$severe_incidence_rendering_max_ages = max_ages
# Set clinical incidence rendering
params$clinical_incidence_rendering_min_ages =  min_ages
params$clinical_incidence_rendering_max_ages = max_ages
# Set age group rendering
params$age_group_rendering_min_ages = min_ages
params$age_group_rendering_max_ages = max_ages
inputs<- list('param_list'= params, 'site_name'= site_name, 'ur'= ur, 'iso'= iso)
# run the model ----------------------------------------------------------------
params<-inputs$param_list
params$progress_bar<- TRUE
timesteps<- params$timesteps
model<- malariasimulation::run_simulation(timesteps = params$timesteps,
parameters = params)
# pull parameters for this site
params<- site::site_parameters(
interventions = site$interventions,
demography = site$demography,
vectors = site$vectors,
seasonality = site$seasonality,
eir= site$eir$eir[1],
overrides = list(human_population= 50000)
)
year<- 365
# Set clinical incidence rendering
params$clinical_incidence_rendering_min_ages = min_ages
params$clinical_incidence_rendering_max_ages = max_ages
# Set severe incidence rendering
params$severe_incidence_rendering_min_ages = min_ages
params$severe_incidence_rendering_max_ages = max_ages
# Set clinical incidence rendering
params$clinical_incidence_rendering_min_ages =  min_ages
params$clinical_incidence_rendering_max_ages = max_ages
# Set age group rendering
params$age_group_rendering_min_ages = min_ages
params$age_group_rendering_max_ages = max_ages
inputs<- list('param_list'= params, 'site_name'= site_name, 'ur'= ur, 'iso'= iso)
# run the model ----------------------------------------------------------------
params<-inputs$param_list
params$progress_bar<- TRUE
timesteps<- params$timesteps
model<- malariasimulation::run_simulation(timesteps = params$timesteps,
parameters = params)
prep_model_launch<- function(site, population, min_ages, max_ages){
#get site info
site_name<- site$sites$name_1
ur<- site$sites$urban_rural
iso<- site$sites$iso3c
# format mortality data
mort<- mort[, c('age_to', 'year', 'value')]
mort<- data.table(mort)
mort[age_to== 0, age_to:= 1]
mort[, age_to:= age_to * 365]
# cut off mortality data before 2000
mort<- mort[year >= 2000]
# maybe attempt to bind mortality rate data directly into site file
# instead of using set_demography
mort<- mort |>
rename(age_upper = age_to,
mortality_rate = value) |>
mutate(age_upper = age_upper/ 365) |>
mutate(iso3c= 'NGA',
country= 'Nigeria')
# align age groups
mort[age_upper > 1, age_upper := age_upper + 1]
mort[age_upper== 121, age_upper:= 200]
# reorder
mort<- mort |>
select(iso3c, country, age_upper, year, mortality_rate)
# bind on a year for youngest age group
youngest<- data.table(site$demography)[age_upper== min(site$demography$age_upper)]
mort<- rbind(youngest, mort)
# replace population in site file with population from VIMC inputs  ------------
site$population<- merge(site$population, total_pop[, c('year', 'value')], by = 'year')
site$population<- site$population |>
select(-pop)
site$population<- site$population |>
rename(pop = value)
message(paste0('prepping inputs for site ', site_name, ' ', ur))
# expand scenario out to 2050
site <- set_vaccine_coverage(
site,
change = FALSE,
terminal_year = 2050,
rtss_target = 0.8,
rtss_year = 2023
)
# pull parameters for this site
params<- site::site_parameters(
interventions = site$interventions,
demography = site$demography,
vectors = site$vectors,
seasonality = site$seasonality,
eir= site$eir$eir[1],
overrides = list(human_population= population)
)
year<- 365
# Set clinical incidence rendering
params$clinical_incidence_rendering_min_ages = min_ages
params$clinical_incidence_rendering_max_ages = max_ages
# Set severe incidence rendering
params$severe_incidence_rendering_min_ages = min_ages
params$severe_incidence_rendering_max_ages = max_ages
# Set clinical incidence rendering
params$clinical_incidence_rendering_min_ages =  min_ages
